#!/bin/sh

AS="${AS:-mips64-as}"
CPP="${CPP:-mips64-cpp}"
NM="${NM:-mips64-nm}"
READELF="${READELF:-mips64-readelf}"

elf="$1"
if [ -z "$elf" ]; then
  echo usage: \`genhooks \<elf-file\>\`
  exit
fi

z64def()
{
  printf "#include \"src/gz/z64.h\"\n$1" | $CPP - $CPPFLAGS | tail -n 1 | sed -e s/^M//g
}

gzsym()
{
  echo "0x`$NM "$elf" | sed -e s/^M//g | grep " $1\$" | sed -E -e "s/([0-9A-Fa-f]{8})?([0-9A-Fa-f]{8}).*/\2/"`"
}

gsc8()
{
  addr="$(printf "%d" "$1")"
  addr="$(expr "$addr" % 16777216 + 2147483648)" # addr = addr & 0x00FFFFFF | 0x80000000
  val="$(printf "%d" "$2")"
  val="$(expr "$val" % 256)" # val = val & 0x00FF
  printf "%08X 00%02X\n" "$addr" "$val"
}

gsc16()
{
  addr="$(printf "%d" "$1")"
  addr="$(expr "$addr" % 16777216 + 2164260864)" # addr = addr & 0x00FFFFFF | 0x81000000
  val="$(printf "%d" "$2")"
  val="$(expr "$val" % 65536)" # val = val & 0xFFFF
  printf "%08X %04X\n" "$addr" "$val"
}

asmgsc()
{
  addr="$(printf "%d" "$1")"
  tmpfile="$(mktemp)"
  echo ".set noreorder; .set noat; $2" | $AS - -o "$tmpfile"
  $READELF -x .text "$tmpfile" | grep "0x[0-9A-Fa-f]\{8\}" | grep -o " [0-9A-Fa-f]\{8\}" |
  while read -r line; do
    gsc16 "$addr" "0x`echo "$line" | sed -e "s/\(....\)..../\1/"`"
    addr="$(expr "$addr" + 2)"
    gsc16 "$addr" "0x`echo "$line" | sed -e "s/....\(....\)/\1/"`"
    addr="$(expr "$addr" + 2)"
  done
  rm -f "$tmpfile"
}

asmgsc  "$(z64def z64_main_hook_addr)"              "jal $(gzsym _start);"
asmgsc  "$(z64def z64_entrance_offset_hook_addr)"   "jal $(gzsym entrance_offset_hook); nop;"
asmgsc  "$(z64def z64_draw_room_1_call_addr)"       "jal $(gzsym draw_room_hook);"
asmgsc  "$(z64def z64_draw_room_2_call_addr)"       "jal $(gzsym draw_room_hook);"
asmgsc  "$(z64def z64_draw_actors_call_addr)"       "jal $(gzsym draw_actors_hook);"
asmgsc  "$(z64def z64_srand_call_addr)"             "jal $(gzsym srand_hook);"
asmgsc  "$(z64def z64_frame_input_call_addr)"       "jal $(gzsym input_hook); nop;"
asmgsc  "$(z64def z64_ocarina_update_call_addr)"    "jal $(gzsym ocarina_update_hook);"
asmgsc  "$(z64def z64_ocarina_input_call_addr)"     "jal $(gzsym ocarina_input_hook);"
asmgsc  "$(z64def z64_ocarina_sync_hook_addr)"      "jal $(gzsym ocarina_sync_hook); lui \$t7, 0x8012; bnel \$v0, \$zero, 0x000C;"
asmgsc  "$(z64def z64_afx_rand_call_addr)"          "jal $(gzsym afx_rand_hook);"
asmgsc  "$(z64def z64_room_load_sync_hook_addr)"    "jal $(gzsym room_load_sync_hook);"
gsc16   "$(z64def z64_minimap_disable_1_addr)"      "0x5000" # beql $zero, $zero
gsc16   "$(z64def z64_minimap_disable_2_addr)"      "0x5000" # beql $zero, $zero
#asmgsc  "$(z64def z64_guPerspectiveF_camo_addr)"    "sw \$a2, 0x0038(\$sp);"
#asmgsc  "$(z64def z64_guPerspective_camo_addr)"     "nop; nop;"
disp_hook="$(gzsym disp_hook)"
asmgsc  "$(z64def z64_disp_swap_1_addr)"            "jal $disp_hook;"
asmgsc  "$(z64def z64_disp_swap_2_addr)"            "jal $disp_hook;"
asmgsc  "$(z64def z64_disp_swap_3_addr)"            "jal $disp_hook;"
asmgsc  "$(z64def z64_disp_swap_4_addr)"            "jal $disp_hook;"
